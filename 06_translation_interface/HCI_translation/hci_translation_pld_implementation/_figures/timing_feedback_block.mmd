%%{init: {'theme': 'neutral', 'fontFamily': 'Inter, Roboto, Helvetica, Arial', 'themeVariables': { 'primaryColor': '#f5f7fb', 'primaryBorderColor': '#c7cce1', 'lineColor': '#8a90b4', 'fontSize': '14px'}}}%%
%% Timing Feedback Block Diagram — PID/Bandit Controller for Latency (L₃)
%% GitHub-compatible Mermaid (v10+)

flowchart LR
    subgraph USER["User Rhythm"]
      UIO[Interaction Tempo<br/>(keypress IOI / speech rate)]
    end

    UIO -->|observed tempo| CMP[Error Computation<br/>e_t = target - observed]

    subgraph CTRL["Latency Controller"]
      PID[PID / Contextual Bandit<br/>τ_{t+1} = clamp(τ_t + Δ)]
      GAIN[Gain Limiter<br/>(α, β bounds)]
    end

    CMP --> PID --> GAIN

    subgraph UI["UI/Orchestrator"]
      HOLD[Render Latency Hold (τ)<br/>cancellable ≤50ms]
      REPAIR[Soft Repair Prompt]
      ECHO[Resonance Echo / Tempo Match]
    end

    GAIN -->|suggest_latency_ms| HOLD --> REPAIR --> ECHO

    subgraph LOGS["Telemetry"]
      L1[latency_hold{duration_ms, reason}]
      L2[repair_triggered{attempt}]
      L3[reentry_success{lag}]
      L4[stability_warning{loop_amp}]
    end

    HOLD -- emit --> L1
    REPAIR -- emit --> L2
    ECHO -- emit --> L3
    GAIN -- emit --> L4

    %% Feedback loop to controller
    HOLD -. user_interrupt .-> CMP
    ECHO -. resonance ρ .-> CMP
